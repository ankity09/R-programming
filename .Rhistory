xlab = "Number of Users")
sn <- read.csv("social_network.csv", header = T)
# R doesn't create bar charts directly from the categorical
# variables; instead, we must first create a table that
# has the frequencies for each level of the variable.
# The "table" function is able to create this table from
# the variable, which we specify as sn$Site. That is, we
# first give the name of the data frame, then $, then the
# name of the variable. (Following Google's style guide,
# it is better to state explictly the data frame than to
# use the shortcut function "attach," which can lead to
# confusion.)
site.freq <- table(sn$Site)  # Creates table from Site
barplot(site.freq)  # Creates barplot in new window
? barplot  # For more information on customizing graph
x<-2
x
x^x
mode(x)
x<-c(1:10)
x
x^x
ls
ls()
ls.str()
dim <- c(2,5)
x
dim(x) <- c(2,5)
x
l
x<-c(1,10)
x
x<-c(1:10)
x
length(x)
y<-10
y
length(y)
x+y
# along with their preferred social networking site
# and an estimate of how many times they log in
# per week.
# Create data frame "sn" from CSV file w/headers
sn <- read.csv("social_network.csv", header = T)
# R doesn't create bar charts directly from the categorical
# variables; instead, we must first create a table that
# has the frequencies for each level of the variable.
# The "table" function is able to create this table from
# the variable, which we specify as sn$Site. That is, we
# first give the name of the data frame, then $, then the
# name of the variable. (Following Google's style guide,
# it is better to state explictly the data frame than to
# use the shortcut function "attach," which can lead to
# confusion.)
site.freq <- table(sn$Site)  # Creates table from Site
barplot(site.freq)  # Creates barplot in new window
? barplot  # For more information on customizing graph
# To put the bars in descending order, add "order":
barplot(site.freq[order(site.freq, decreasing = T)])
# Draw the bars horizontally (but turn off decreasing)
barplot(site.freq[order(site.freq)], horiz = T)
# Make Facebook blue and all others gray by specifying a
x<-c(1;10)
x<-c(1:10)
x
y<-c(0,1)
y
x+y
y<-c(1,3,5)
y
x+y
2+3*x
(2+3)*5
(2+3)*x
sqrt(x)
x%%4
x%%2
y<-3+2i
Re(y)
Im(y)
x<-1:10
x
x<-c(x,11:15)
x
P<-0.301
P<-(0.301,0.176,0.125,0.097,0.079,0.067,0.058,0.051,0.046)
P<-c(P,0.176,0.125,0.097,0.079,0.067,0.058,0.051,0.046)
P
V<-(1,2,3,4,5,6,7,8,9)
V<-(1:9)
sumV*P
sum(V*P)
2^2
2*2
2/2
2+2
2-2
x->2
x<-2
x^2
x*x
x
x<-2
x
x^x
x^2
mode(x)
x<-c(1:10)
x
x^x
mode(x)
dim(x)<-c(2,5)
x
mode(x)
x<-c(TRUE<TRUE,FALSE,FALSE,TRUE,FALSE,TRUE)
x
x<-c(TRUE,TRUE,FALSE,FALSE,TRUE,FALSE,TRUE)
x
mode(x)
x<-list("R","12345",FALSE)
x
mode(x)
mode(x)
x<-c("Hello world")
x
View(sn)
View(sn)
View(sn)
x<-c(10)
x
lenght(x)
length(x)
x<-c(1:10)
x
length(x)
y<-10
length(y)
x+y
B = matrix( c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow=3,ncol=3)
B = matrix( c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow=3 , ncol=3)
B = matrix(c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow=3 , ncol=3)
install package(cran)
library("Matrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
B = matrix(c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow=3 , ncol=3)
B = matrix(c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow = 3 , ncol = 3)
B = matrix(c(17460,20388,5394,3394,79071,1900,26981,8780,0) nrow=3 , ncol = 3)
B = matrix(c(17460,20388,5394,3394,79071,1900,26981,8780,0),nrow=3 , ncol = 3)
colnames(B) <- c("Chicago","Atlanta","Dallas/Forth")
view(B)
View(B)
rownames(B) <- c("EV","DL","WN")
View(B)
barplot(B,beside=TRUE,bor=NA)
barplot(B,beside=TRUE,bor=NA,ylim = c(0,100000))
barplot(B,beside=TRUE,bor=NA,ylim = c(0,80000))
barplot(B,beside=TRUE,bor=NA,ylim = c(0,80000),col=c("red","orange","steelblue3"))
legend(locator(1),rownames(B),fill=c("red","orange","steelblue3"))
barplot(B,beside=TRUE,bor=NA,ylim = c(0,80000),col=c("red","orange","steelblue3"))
legend(locator(1),rownames(B),fill=c("red","orange","steelblue3"))
ggplot2
install package(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
ggplot(B,    geom_bar(stat="identity") +    geom_text(aes(y=label_y, label=Weight), vjust=1.5, colour="white")
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(B))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,100000))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,60000))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000))
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),width = 1)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 0)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 10)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 5)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 3)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 2)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
barplot(B, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
barplot(B, main="Carrier and Citywise Distribution",
xlab="Number of Gears", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
barplot(B, main="Carrier and Citywise Distribution",
xlab="Cities", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
abline(h=40000)
barplot(B, main="Carrier and Citywise Distribution",
xlab="Cities", col=c("darkblue","red","yellow"),
legend = rownames(B),ylim = c(0,90000),space = 1)
abline(h=0)
install.packages("mapdata")
library("mapdata", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("maps")
install.packages("maps")
install.packages("maps")
library("maps", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages(ggplot2)
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
help mean
help (mean)
args(mean)
exmple(mean)
eaxmple(mean)
example(mean)
x
print("hello world","22","hello")
cat("hello world","22","hello")
ls
ls()
1:5
seq(from=10,to=25,by=2)
rep(1,times=5)
install.packages("KernSmooth")
library(KernSmooth)
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
library("swirk")
library("swirl")
swirl()
asd
12
3
3
3
3
info()
main()
getwd()
bye()
ls
swirl()
bye()
swirl()
1:20 # to create a sequnce of numbers from 1 to 20
pi:10 # to create a sequnce of real numbers
15:1
?:
?`:`
seq(1,20)
seq(0,10,by=0.5) # this command gives us the sequnce from 0 to 10 with an increment of 0.5 which is possible because of the seq()
my_seq <- seq(5,10,length=30) # this stores a sequence from 5 to 10 with 30 variables
length(my_seq) # to check the length of the my_seq variable we use the length()
1:length(my_seq) # this command creates a sequence of the 30 by passing the ending value from the length function
seq(along.with = my_seq) # is another option for the above commmand
seq_along(my_seq) # the dedicated R function to the above task is seq along
rep(0,times=40) # to create a vector that contains 40 zeroes repeateadly
rep(c(0,1,2),times=10) # to create a vector of (0,1,2) repeating 10 times
rep(c(0,1,2),each=10) # if we want our vector to contain 10 zeros, then 10 ones, then 10 twos. We can do this with the `each` argument
bye()
swirl()
1:20 # to create a sequence of numbers from 1 to 20
pi:10 # to create a sequence of real numbers from pi to 10
15:1 # to print a sequnce from 15 to 1
?`:` # to read the documentation of : we need to pass it '?' using backticks(`)
seq(1,20) # the seq() also prints the sequence from 1 to 20
seq(0,10,by=0.5) # this command gives us the sequence from 0 to 10 with an increment of 0.5 which is possible because of the seq()
my_seq <- seq(5,10,length=30) # this stores a sequence from 5 to 10 with 30 variables
length(my_seq) # to check the length of the my_seq variable we use the length()
1:length(my_seq) # this command creates a sequence of the 30 by passing the ending value from the length function
seq(along.with = my_seq) # is another option for the above commmand
seq_along(my_seq) # the dedicated R function to the above task is seq along
rep(0,times=40) # to create a vector that contains 40 zeroes repeateadly
rep(c(0,1,2),times=10) # to create a vector of (0,1,2) repeating 10 times
rep(c(0,1,2),each=10) # if we want our vector to contain 10 zeros, then 10 ones, then 10 twos. We can do this with the `each` argument
setwd("~/R-programming")
